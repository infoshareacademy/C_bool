@using C_bool.WebApp.Config
@using Microsoft.Extensions.Options
@using System.Text.Json
@using C_bool.WebApp.ViewComponents
@model List<C_bool.WebApp.Models.Place.PlaceViewModel>
@inject IOptionsSnapshot<GoogleAPISettings> _appSettings

@{
    var userLatitude = ViewBag.Latitude;
    var userLongitude = ViewBag.Longitude;
    var mapZoom = ViewBag.MapZoom;
    var noBounds = (bool)ViewBag.NoBounds;
}

<div id="dvMap" style="width: 100%; height: 100%; border-radius: 20px 20px 20px 20px;"></div>

<script type="text/javascript">
    var markers = JSON.parse('@Html.Raw(JsonSerializer.Serialize(Model))');



    function initMarkersMap() {
        var userLatlng = new google.maps.LatLng(@Html.Raw(userLatitude), @Html.Raw(userLongitude));

        var bounds = new google.maps.LatLngBounds();
        bounds.extend(userLatlng);

        var mapOptions = {
            center: userLatlng,
            zoom: @Html.Raw(mapZoom),
            mapTypeId: google.maps.MapTypeId.ROADMAP,
            mapId: '@Html.Raw(_appSettings.Value.CustomMapId)'
        };

        var infoWindow = new google.maps.InfoWindow();
        var map = new google.maps.Map(document.getElementById("dvMap"), mapOptions);

        var userMarker = new google.maps.Marker({
            position: userLatlng,
            map: map,
            title: 'Twoja lokalizacja',
            icon: "/img/marker_user.png"
        });

        for (i = 0; i < markers.length; i++) {
            var data = markers[i];
            var myLatlng = new google.maps.LatLng(data.Latitude, data.Longitude);
            var iconImg = "/img/marker_red.png";
            if (data.ActiveTaskCount > 0) {
                iconImg = "/img/marker_green.png";
            }

            if (data.ShortDescription == null) {
                data.ShortDescription = "&#128123; Miejsce nie posiada opisu";
            }

            bounds.extend(myLatlng);

            var marker = new google.maps.Marker({
                position: myLatlng,
                map: map,
                title: data.Name,
                icon: iconImg
            });


            (function (marker, data) {

                var contentString =
                    "<div class=\"card-body\">" +
                    "<h2 class=\"fs-5 fw-bold mb-1\">" + data.Name + "</h2>" +
                    "<p><b>"+ data.Address +"</b></p>" +
                    "<p>" + data.ShortDescription +"</p>" +
                        "<div class=\"d-block\">" +
                    "<div class=\"d-flex align-items-center pt-3\">" +
                                "<div class=\"icon-shape icon-sm icon-shape-purple rounded me-3\">" +
                                    "<svg fill=\"currentColor\" viewBox=\"0 0 20 20\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M2 11a1 1 0 011-1h2a1 1 0 011 1v5a1 1 0 01-1 1H3a1 1 0 01-1-1v-5zM8 7a1 1 0 011-1h2a1 1 0 011 1v9a1 1 0 01-1 1H9a1 1 0 01-1-1V7zM14 4a1 1 0 011-1h2a1 1 0 011 1v12a1 1 0 01-1 1h-2a1 1 0 01-1-1V4z\"></path></svg></div>" +
                                "<div class=\"d-block\">" +
                                    "<label class=\"mb-0\">Zadania</label>" +
                                    "<h4 class=\"mb-0\">"+ data.ActiveTaskCount +" zadań dla tego miejsca</h4>" +
                                "</div>" +
                            "</div>" +
                    "</div></br>" +
                    "<a href=\"/Places/Details/" + data.Id + "\" class=\"btn btn-sm btn-primary\">Szczegóły miejsca i zadania</a><a> </a>" +
                    "<a href=\"https://www.google.com/maps/dir/?api=1&origin=" + @Html.Raw(userLatitude) + "%2C" + @Html.Raw(userLongitude) + "&destination=" + data.Latitude + "%2C" + data.Longitude + "\" class=\"btn btn-sm btn-primary\" target=\"_blank\" rel=\"noopener\">Pokaż na Google Maps</a>" +
                    "</div>";

                google.maps.event.addListener(marker,
                    "click",
                    function(e) {
                        infoWindow.setContent(contentString);
                        infoWindow.open(map, marker);
                    });
            })(marker, data);
        }

        @if (!noBounds)
        {
            @Html.Raw("map.fitBounds(bounds);");
        }
    }

    window.onload = initMarkersMap();
</script>


@section Scripts {


}
