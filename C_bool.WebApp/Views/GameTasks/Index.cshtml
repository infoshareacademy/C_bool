@inject IOptionsSnapshot<GoogleAPISettings> _appSettings;
@using C_bool.WebApp.Config
@using C_bool.WebApp.Helpers
@using Microsoft.Extensions.Options
@using C_bool.BLL.Config
@model IEnumerable<C_bool.WebApp.Models.GameTask.GameTaskViewModel>

@{
    ViewData["Title"] = "Zadania";
}


<!--search & filter form-->
<form asp-action="Index" method="get">
    <div class="input-group input-group-lg border-0 shadow mb-3 sticky-top">
        <span class="input-group-text">
            <ul class="nav nav-pills nav-fill flex-column flex-md-row" id="tabs-text" role="tablist">
                <li class="nav-item">
                    <a class="nav-link mb-sm-3 mb-md-0 active" id="tabs-text-1-tab" data-bs-toggle="tab" href="#tabs-text-1" role="tab" aria-controls="tabs-text-1" aria-selected="true"><b>Lista</b></a>
                </li>
                <li class="nav-item">
                    <a class="nav-link mb-sm-3 mb-md-0" id="tabs-text-2-tab" data-bs-toggle="tab" href="#tabs-text-2" role="tab" aria-controls="tabs-text-2" aria-selected="false"><b>Mapa</b></a>
                </li>
            </ul>
        </span>
        <span class="input-group-text">
            <input class="form-check-input" id="favCheckbox" name="onlyUserFavs" type="checkbox" asp-for="@ViewData["onlyUserFavs"]" aria-label="Checkbox for following text input">
            <br />
            <label for="favCheckbox" style="margin-left: 15px; margin-bottom: 0px" class="bi-heart"></label>
        </span>
        <button class="btn btn-primary" type="button" data-bs-toggle="offcanvas" data-bs-target="#filterMenu" aria-controls="filterMenu">Więcej filtrów</button>
        @*<select class="form-select" asp-items="SelectListItems.PlaceSearchRange" name="Range" asp-for="@ViewData["range"]" id="inputGroupSelectRange"></select>*@
        <input type="text" class="form-control" name="SearchString" placeholder="Wszystkie zadania" value="@ViewData["searchString"]" aria-describedby="button-addon2">
        <button class="btn btn-outline-secondary" value="Szukaj!" type="submit"><a class="text-decoration-none" asp-action="Index">Wyczyść</a></button>
        <input class="btn btn-outline-secondary" value="Szukaj!" type="submit" />
    </div>


    <!--Offcanvas filter menu-->
    <div class="offcanvas offcanvas-end" tabindex="-1" id="filterMenu" aria-labelledby="filterMenuLabel">
        <div class="offcanvas-header">
            <h5 id="filterMenuLabel">Filtry</h5>
            <button type="button" class="btn-close text-reset" data-bs-dismiss="offcanvas" aria-label="Close"></button>
        </div>
        <div class="offcanvas-body">
            <div class="card mb-4">
                <div class="card-header bg-gray-200">
                    Odległość
                </div>
                <div class="card-body">
                    <input name="range" asp-for="@ViewData["range"]" id="pointsInput" class="form-range" type="range" min="100" step="100" max="40000000" oninput="amount.value=pointsInput.value / 1000">

                    <h1 class="mb-0">
                        <b>
                            @{
                                var initRange = (double)ViewData["range"] / 1000;
                            }
                            <output name="amount" id="amount" for="pointsInput">@initRange</output>
                        </b> km
                    </h1>

                </div>
            </div>
            <div class="card mb-4">
                <div class="card-header bg-gray-200">
                    Sortowanie według
                </div>
                <div class="card-body">
                    <select name="sortBy" class="form-select mb-2" asp-for="@ViewData["sortBy"]" aria-label=".form-select-lg example">
                        <option value="0">Brak</option>
                        <option value="name">Nazwa</option>
                        <option value="distance">Odległości</option>
                        <option value="active">Aktywne</option>
                        <option value="from_date">Ważne od</option>
                        <option value="to_date">Ważne do</option>
                        <option value="create_date">Daty utworzenia</option>
                    </select>
                    <div class="form-check form-check-inline">
                        <input class="form-check-input" name="sortOrder" type="radio" asp-for="@ViewData["sortOrder"]" id="sortOrderAsc" value="false">
                        <label class="form-check-label" for="sortOrderAsc">Rosnąco</label>
                    </div>
                    <div class="form-check form-check-inline">
                        <input class="form-check-input" name="sortOrder" type="radio" asp-for="@ViewData["sortOrder"]" id="sortOrderDesc" value="true">
                        <label class="form-check-label" for="sortOrderDesc">Malejąco</label>
                    </div>
                </div>
            </div>
            <div class="card mb-4">
                <div class="card-header bg-gray-200">
                    Typ zadania
                </div>
                <div class="card-body">
                    <select name="taskType" class="form-select" asp-for="@ViewData["taskType"]" aria-label=".form-select-lg example">
                        <option value="0">Wszystkie</option>
                        <option value="TakeAPhoto">Zrób zdjęcie</option>
                        <option value="CheckInToALocation">Odwiedź miejsce</option>
                        <option value="Event">Wydarzenie</option>
                        <option value="TextEntry">Podaj hasło</option>
                    </select>
                </div>
            </div>

            <div class="card mb-4">
                <div class="card-header bg-gray-200">
                    Status
                </div>
                <div class="card-body">
                    <div class="form-check">
                        <input class="form-check-input" name="onlyUserFavs" type="checkbox" asp-for="@ViewData["onlyUserFavs"]" id="onlyUserFavsId">
                        <label class="form-check-label" for="onlyUserFavsId">
                            Na Twojej liście
                        </label>
                    </div>
                    <div class="form-check mx-4">
                        <input class="form-check-input" name="onlyNotDone" type="checkbox" asp-for="@ViewData["onlyNotDone"]" id="onlyNotDoneId">
                        <label class="form-check-label" for="onlyNotDoneId">
                            Nie wykonane
                        </label>
                    </div>
                    <div class="form-check">
                        <input class="form-check-input" name="onlyActive" type="checkbox" asp-for="@ViewData["onlyActive"]" id="onlyActiveId">
                        <label class="form-check-label" for="onlyActiveId">
                            Aktywne
                        </label>
                    </div>
                    <div class="form-check">
                        <input class="form-check-input" name="userCreated" type="checkbox" asp-for="@ViewData["userCreated"]" id="userCreatedId">
                        <label class="form-check-label" for="userCreatedId">
                            Stworzone przez ciebie
                        </label>
                    </div>
                </div>
            </div>

            <input class="btn btn-lg btn-primary" value="Zastosuj filtry" type="submit" />
        </div>
    </div>
</form>
<!-- Tab Content 1) Tasks -->
<div>
    <div class="card-body p-0">
        <div class="tab-content" id="tabcontent1">
            <div class="tab-pane fade show active" style="" id="tabs-text-1" role="tabpanel" aria-labelledby="tabs-text-1-tab">


                @if (Model != null && Model.Any())
                {
                    <div class="card-group task-card-group">
                        @foreach (var item in Model)
                        {
                            <!-- Patial with Card style tasks list -->
                            <partial name="GameTasks/_TasksCard" model="item" />
                        }
                    </div>
                }
                else
                {
                    <div class="alert alert-dismissible alert-warning" style="margin: 10px">
                        <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
                        <h4 class="alert-heading">Nie bangla!</h4>
                        <p class="mb-0">Wygląda na to, że nie ma takich zadań w bazie...<br>Zmień parametry wyszukiwania aby spróbować jeszcze raz, możesz wyszukać tysiące nowych miejsc w menu <b>Dodaj w pobliżu</b> lub <b>Dodaj po nazwie</b>, lub dodać swoje własne miejsce wybierając opcję <b>Dodaj nowe</b></p>
                    </div>
                }
            </div>
            <div class="tab-pane fade" id="tabs-text-2" role="tabpanel" aria-labelledby="tabs-text-2-tab">
                <div style="height: calc(100vh - 160px);">
                    @await Component.InvokeAsync("MapView", new { placesList = (Model?.Select(x => x.Place) ?? Array.Empty<C_bool.WebApp.Models.Place.PlaceViewModel>()).ToList(), range = @ViewData["MapZoom"], noBounds = true })
                </div>
            </div>
        </div>
    </div>
</div>

<!-- MapModal -->
<div class="modal" id="mapModal">
    <div class="modal-dialog modal-dialog-centered modal-lg" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title"></h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true"></span>
                </button>
            </div>
            <div class="modal-body">
                <div id="map" style="background-color: gainsboro; width: 100%; height: 600px"></div>
            </div>
            <div class="modal-footer">
            </div>
        </div>
    </div>
</div>

<!-- Delete place Modal -->
<div class="modal fade" id="deleteModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">Usuń</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                Czy na pewno chcesz usunąć wskazane miejsce?
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Anuluj</button>
                <button id="btnContinueDelete" type="button" class="btn btn-danger">Usuń</button>
            </div>
        </div>
    </div>
</div>



@section Scripts {
    <script type="text/javascript">

        var latitude, longitude;

        //initialize map view - modal
        function initMap(latitude, longitude) {
            const point = { lat: latitude, lng: longitude };
            const modalMap = new google.maps.Map(document.getElementById("map"),
                {
                    zoom: 16,
                    mapId: '@Html.Raw(_appSettings.Value.CustomMapId)',
                    center: point

                });
            const marker = new google.maps.Marker({
                position: point,
                map: modalMap,
                icon: "/img/onion.png"
            });
        }

        // get current location
        function getLocation() {
            if (navigator.geolocation) {
                navigator.geolocation.getCurrentPosition(useLocation);
            }
        };

        function useLocation(position) {
            latitude = position.coords.latitude;
            longitude = position.coords.longitude;

        };

        //post data to controller
        function postToController(controller, view, input) {
            var postData = {Id: input};

            $.ajax(
                {
                    type: "POST",
                    url: '/' + controller + '/' + view,
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    data: JSON.stringify(postData),
                    success: function(data) {
                        showNotif('green', 'OK');
                    },

                    error: function (xmlhttprequest, textstatus, errorthrown) {
                        showNotif('red', errorthrown);
                    }
                });
        };

        // delete item for modal
        var path_to_delete;

        $(".deleteItem").click(function (e) {
            path_to_delete = $(this).data('path');
        });

        $('#btnContinueDelete').click(function () {
            window.location = path_to_delete;
        });

        //events listener and load actions
        window.onload = getLocation();
    </script>
}