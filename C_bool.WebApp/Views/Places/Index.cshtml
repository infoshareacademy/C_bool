@inject IOptions<AppSettings> appSettings;
@using System.Text.Json
@using System.Globalization
@using System.Security.Cryptography.X509Certificates
@using C_bool.BLL.Logic
@using C_bool.WebApp.Config
@using Microsoft.Extensions.Options
@model IEnumerable<C_bool.BLL.Models.Places.Place>

@{
    ViewData["Title"] = "Index";
}

<div class="nav-wrapper position-relative mb-3">
    <div class="col-4">
        <ul class="nav nav-pills nav-fill flex-column flex-md-row" id="tabs-text" role="tablist">
            <li class="nav-item">
                <a class="nav-link mb-sm-3 mb-md-0 active" id="tabs-text-1-tab" data-bs-toggle="tab" href="#tabs-text-1" role="tab" aria-controls="tabs-text-1" aria-selected="true">Ulubione miejsca</a>
            </li>
            <li class="nav-item">
                <a class="nav-link mb-sm-3 mb-md-0" id="tabs-text-2-tab" data-bs-toggle="tab" href="#tabs-text-2" role="tab" aria-controls="tabs-text-2" aria-selected="false">Mapa</a>
            </li>
        </ul>
    </div>
</div>
<!-- End of Tab Nav -->
<!-- Tab Content -->
<div class="card border-0">
    <div class="card-body p-0">
        <div class="tab-content" id="tabcontent1">
            <div class="tab-pane fade show active" style="" id="tabs-text-1" role="tabpanel" aria-labelledby="tabs-text-1-tab">

                @if (Model != null && Model.Any())
                {
                    <div class="card-deck" style="height: 80vh; overflow-y: scroll; align-content: center">
                        @foreach (var item in Model)
                        {
                            <div class="card mb-3" style="float: left; min-width: 450px; max-width: 500px; width: 50%; height: 550px; margin: 10px;">
                            <h3 class="card-header" style="white-space: nowrap; overflow: hidden; text-overflow: ellipsis;">@Html.DisplayFor(modelItem => item.Name)</h3>
                            <div class="card-body">
                                <h5 class="card-title">@Html.DisplayFor(modelItem => item.Address)</h5>
                                <h6 class="card-subtitle text-muted">Ocena: @Html.DisplayFor(modelItem => item.Rating) / (@Html.DisplayFor(modelItem => item.UserRatingsTotal)) wszystkich ocen</h6>
                            </div>
                            @if (item.Photos != null && item.Photos.Count > 0 && appSettings.Value.EnablePlacePhoto)
                            {
                                <img class="d-block user-select-none" width="100%" height="200" aria-label="Placeholder: Image cap" focusable="false" role="img" preserveAspectRatio="xMidYMid slice" viewBox="0 0 318 180" style="font-size: 1.125rem; text-anchor: middle"
                                     src="https://maps.googleapis.com/maps/api/place/photo?maxwidth=400&photo_reference=@Html.DisplayFor(modelItem => item.Photos[0].PhotoReference)&key=@appSettings.Value.GoogleAPIKey" alt="Card image cap">
                            }
                            else
                            {
                                <img class="d-block user-select-none" width="100%" height="200" aria-label="Placeholder: Image cap" focusable="false" role="img" preserveAspectRatio="xMidYMid slice" viewBox="0 0 318 180" style="font-size: 1.125rem; text-anchor: middle"
                                     src="/img/image-placeholder.jpg" alt="Card image cap">
                            }
                            <div class="card-body">
                                <p class="card-text"></p>
                            </div>
                            <ul class="list-group list-group-flush">
                            <form asp-controller="Places" asp-action="Delete" asp-route-id="@item.Id" method="post" style="display: flex; justify-content: center;">
                                <div class="btn-group" role="group" aria-label="Basic example" style="margin: 4px; ">
                                    <button type="button" class="btn btn-success"><l class="bi-file-plus"> Zadanie</l></button>
                                    <button type="button" class="btn btn-success"><l class="bi-file-plus"> Edytuj</l></button>
                                    <button type="button" class="btn btn-secondary" data-bs-toggle="modal" data-bs-target="#mapModal" onclick="initMap(@item.Geometry.Location.Latitude.ToString(CultureInfo.InvariantCulture), @item.Geometry.Location.Longitude.ToString(CultureInfo.InvariantCulture))"><l class="bi-map"> Mapa</l></button>
                                    <button asp-action="Delete" asp-route-id="@item.Id" type="submit" class="btn btn-primary"><l class="bi bi-trash"> Usuń</l></button>
                                </div>
                            </form>
                            </ul>


                                <div class="card-footer text-muted" style="white-space: nowrap; overflow: hidden; text-overflow: ellipsis;">

                                    @foreach (var type in item.Types)
                                    {
                                        if (SearchPlaceByCategory.PlaceCategories2.ContainsKey(type))
                                        {
                                            foreach (KeyValuePair<string, string> kvp in SearchPlaceByCategory.PlaceCategories2)
                                            {
                                                if (kvp.Key.Equals(type))
                                                {
                                                    <label>@kvp.Value |</label>
                                                }
                                            }
                                        }
                                        else
                                        {
                                            <label style="color:silver"> @type |</label>
                                        }
                                    }
                                    @if (item.Types.Count == 0)
                                    {
                                        <label>Brak kategorii</label>
                                    }

                                </div>
                        </div>
                        }
                    </div>
                }
                else
                {
                    <div class="alert alert-dismissible alert-warning" style="margin: 10px">
                        <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
                        <h4 class="alert-heading">Nie bangla!</h4>
                        <p class="mb-0">Wygląda na to, że nie masz ulubionych miejsc...<br>Przedź do <b>Szukaj w pobliżu</b> aby coś wyszukać, lub dodaj swoje miejsce</p>
                    </div>
                }
            </div>
            <div class="tab-pane fade" id="tabs-text-2" role="tabpanel" aria-labelledby="tabs-text-2-tab">
                @await Component.InvokeAsync("MapView")
            </div>
        </div>
    </div>
</div>

<div class="modal" id="mapModal">
    <div class="modal-dialog modal-dialog-centered modal-lg" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title"></h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true"></span>
                </button>
            </div>
            <div class="modal-body">
                <div id="map" style="background-color: gainsboro; width: 100%; height: 600px"></div>
            </div>
            <div class="modal-footer">
            </div>
        </div>
    </div>
</div>

<script>
    var latitude, longitude;

    function getLocation() {
        if (navigator.geolocation) {
            navigator.geolocation.getCurrentPosition(useLocation);
        }
    };

    function useLocation(position) {
        latitude = position.coords.latitude;
        longitude = position.coords.longitude;

        var postData = { Latitude: latitude, Longitude: longitude };
        $.ajax(
            {
                type: "POST",
                url: "@Url.Action("GetGeoLocation", "Places")",
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                data: JSON.stringify(postData),
                success: function (data) {
                },
                error: function (ex) {
                    alert("Nie udało się przekazać lokalizacji" + ex);
                }
            });
    };

    window.onload = getLocation();
</script>