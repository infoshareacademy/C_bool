@using C_bool.WebApp.Interfaces
@inject IAppSettings appSettings;
@using System.Text.Json
@using System.Globalization
@using System.Security.Cryptography.X509Certificates
@model IEnumerable<C_bool.BLL.Models.Places.Place>

@{
    ViewData["Title"] = "Index";
}

<div style="margin: 10px;">
    @*<button id="locationButton" type="button" class="btn btn-primary" onclick="getLocation()">Pobierz lokalizację</button>
    <a asp-action="Update"><input type="button" class="btn btn-primary" value="Odśwież bazując na lokalizacji" /></a>*@
    <a asp-controller="NewPlace" asp-action="NewRequest"><input type="button" class="btn btn-lg btn-primary" value="Szukaj nowych miejsc" /></a>
</div>

<ul class="nav nav-tabs" style="margin: 10px;">
    <li class="nav-item">
        <a class="nav-link active" data-bs-toggle="tab" href="#home">Miejsca</a>
    </li>
    <li class="nav-item">
        <a class="nav-link" data-bs-toggle="tab" href="#maptab">Mapa</a>
    </li>
    @*<li class="nav-item">
        <a class="nav-link disabled" href="#">Disabled</a>
    </li>
    <li class="nav-item dropdown">
        <a class="nav-link dropdown-toggle" data-bs-toggle="dropdown" href="#" role="button" aria-haspopup="true" aria-expanded="false">Dropdown</a>
        <div class="dropdown-menu" style="">
            <a class="dropdown-item" href="#">Action</a>
            <a class="dropdown-item" href="#">Another action</a>
            <a class="dropdown-item" href="#">Something else here</a>
            <div class="dropdown-divider"></div>
            <a class="dropdown-item" href="#">Separated link</a>
        </div>
    </li>*@
</ul>

<div class="modal" id="mapModal">
    <div class="modal-dialog modal-dialog-centered modal-lg" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title"></h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true"></span>
                </button>
            </div>
            <div class="modal-body">
                <div id="map" style="background-color: gainsboro; width: 100%; height: 600px"></div>
            </div>
            <div class="modal-footer">
            </div>
        </div>
    </div>
</div>

<div id="myTabContent" class="tab-content">
    <div class="tab-pane fade active show" id="home">
        @if (Model.Count() > 0)
        {
            <h1 style="margin: 10px;">Znalezione miejsca:</h1>
        }
        else
        {
            <div class="alert alert-dismissible alert-warning">
                <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
                <h4 class="alert-heading">Nie bangla!</h4>
                <p class="mb-0">Wygląda na to, że nie ma żadnych miejsc pasujacych do zapytania :-(<br>Kliknij przycisk <b>Nowe zapytanie</b> aby coś wyszukać</p>
            </div>
        }

        <div>
            @foreach (var item in Model)
            {
                <div class="card mb-3" style="float: left; width: 400px; height: 500px; margin: 10px;">
                    <h3 class="card-header" style="white-space: nowrap; overflow: hidden; text-overflow: ellipsis;">@Html.DisplayFor(modelItem => item.Name)</h3>
                    <div class="card-body">
                        <h5 class="card-title">@Html.DisplayFor(modelItem => item.Address)</h5>
                        <h6 class="card-subtitle text-muted">Ocena: @Html.DisplayFor(modelItem => item.Rating) / (@Html.DisplayFor(modelItem => item.UserRatingsTotal)) wszystkich ocen</h6>
                    </div>

                    @if (item.photos != null)
                    {
                        <img class="d-block user-select-none" width="100%" height="200" aria-label="Placeholder: Image cap" focusable="false" role="img" preserveAspectRatio="xMidYMid slice" viewBox="0 0 318 180" style="font-size: 1.125rem; text-anchor: middle"
                             src="https://maps.googleapis.com/maps/api/place/photo?maxwidth=400&photo_reference=@Html.DisplayFor(modelItem => item.photos[0].photo_reference)&key=@appSettings.GoogleAPIKey" alt="Card image cap">
                    }
                    else
                    {
                        <img class="d-block user-select-none" width="100%" height="200" aria-label="Placeholder: Image cap" focusable="false" role="img" preserveAspectRatio="xMidYMid slice" viewBox="0 0 318 180" style="font-size: 1.125rem; text-anchor: middle"
                             src="/img/image-placeholder.jpg" alt="Card image cap">
                    }
                    <div class="card-body">
                        <p class="card-text"></p>
                    </div>
                    <ul class="list-group list-group-flush">
                        <div class="btn-group" role="group" aria-label="Basic example" style="margin: 4px;">
                            <button type="button" class="btn btn-success"><l class="bi-file-plus"> Nowe zadanie</l></button>
                            <button type="button" class="btn btn-secondary" data-bs-toggle="modal" data-bs-target="#mapModal" onclick="initMap(@item.Geometry.Location.Latitude.ToString(CultureInfo.InvariantCulture), @item.Geometry.Location.Longitude.ToString(CultureInfo.InvariantCulture))"><l class="bi-map"> Mapa</l></button>
                            <button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#exampleModal"><l class="bi-heart"> Ulubione</l></button>
                        </div>
                    </ul>
                    <div class="card-footer text-muted">
                        @foreach (var placeType in item.Types)
                        {
                            if (placeType is not ("point_of_interest" and "establishment"))
                            {
                                <l>@placeType |</l>
                            }
                        }
                    </div>
                </div>
            }
        </div>

    </div>
    <div class="tab-pane fade" id="maptab">
        <div id="dvMap" style="width: 100%; height: 800px"></div>
    </div>
    <div class="tab-pane fade" id="dropdown1">
        <p>Etsy mixtape wayfarers, ethical wes anderson tofu before they sold out mcsweeney's organic lomo retro fanny pack lo-fi farm-to-table readymade. Messenger bag gentrify pitchfork tattooed craft beer, iphone skateboard locavore carles etsy salvia banksy hoodie helvetica. DIY synth PBR banksy irony. Leggings gentrify squid 8-bit cred pitchfork.</p>
    </div>
    <div class="tab-pane fade" id="dropdown2">
        <p>Trust fund seitan letterpress, keytar raw denim keffiyeh etsy art party before they sold out master cleanse gluten-free squid scenester freegan cosby sweater. Fanny pack portland seitan DIY, art party locavore wolf cliche high life echo park Austin. Cred vinyl keffiyeh DIY salvia PBR, banh mi before they sold out farm-to-table VHS viral locavore cosby sweater.</p>
    </div>
</div>

<script>
    var latitude, longitude;
    getLocation();

    function getLocation() {
        if (navigator.geolocation) {
            navigator.geolocation.getCurrentPosition(useLocation);
        }

    };

    function useLocation(position) {
        /*            window.location.replace('?lat=' + position.coords.longitude + '&?lon=' + position.coords.latitude);*/
        latitude = position.coords.latitude;
        longitude = position.coords.longitude;

        var postData = { Latitude: latitude, Longitude: longitude };
        $.ajax(
            {
                type: "POST",
                url: "@Url.Action("GetGeoLocation", "Places")",
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                //dataType: "json",
                data: JSON.stringify(postData),
                success: function (data) {
                    //alert("Pass" + data);
                },
                error: function (ex) {
                    alert("Nie udało się przekazać lokalizacji" + ex);
                }
            });
    };

    window.onload = getLocation();
</script>

<script type="text/javascript" src="https://maps.googleapis.com/maps/api/js?key=@appSettings.GoogleAPIKey"></script>
<script type="text/javascript">
    var markers = $.parseJSON('@Html.Raw(JsonSerializer.Serialize(Model))');
    window.onload = function () {
        var mapOptions = {
            center: new google.maps.LatLng(markers[0].Geometry.Location.Latitude, markers[0].Geometry.Location.Longitude),
            zoom: 14,
            mapTypeId: google.maps.MapTypeId.ROADMAP,
            mapId: 'c67cdd640e77cc91'
        };
        var infoWindow = new google.maps.InfoWindow();
        var map = new google.maps.Map(document.getElementById("dvMap"), mapOptions);
        for (i = 0; i < markers.length; i++) {
            var data = markers[i]
            var myLatlng = new google.maps.LatLng(data.Geometry.Location.Latitude, data.Geometry.Location.Longitude);
            var marker = new google.maps.Marker({
                position: myLatlng,
                map: map,
                title: data.Name,
                icon: "/img/onion.png"
            });
            (function (marker, data) {
                google.maps.event.addListener(marker, "click", function (e) {
                    infoWindow.setContent(data.Address);
                    infoWindow.open(map, marker);
                });
            })(marker, data);
        }
    }
</script>
<script>
    function initMap(latitude, longitude) {
        const point = { lat: latitude, lng: longitude };
        const map = new google.maps.Map(document.getElementById("map"), {
            zoom: 16,
            center: point,
            mapId: 'c67cdd640e77cc91'
        });
        const marker = new google.maps.Marker({
            position: point,
            map: map,
            icon: "/img/onion.png"
        });
    }
</script>