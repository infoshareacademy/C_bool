@inject IOptionsSnapshot<AppSettings> _appSettings;
@using C_bool.BLL.Logic
@using System.Globalization
@using C_bool.WebApp.Config
@using Microsoft.Extensions.Options
@model IEnumerable<C_bool.BLL.DAL.Entities.Place>

@{
}

<div class="card-deck" style="height: 80vh; align-content: center">
    @foreach (var item in Model)
    {
        <div class="card mb-3" style="float: left; min-width: 450px; max-width: 500px; width: 50%; height: 550px; margin: 10px;">
            <a href="Places/Details/@item.Id" class="card-title">
                <h3 class="card-header" style="white-space: nowrap; overflow: hidden; text-overflow: ellipsis;">@Html.DisplayFor(modelItem => item.Name)</h3>
            </a>
            <div class="card-body">
                <h5 class="card-title">@Html.DisplayFor(modelItem => item.Address)</h5>

                <h6 class="card-subtitle text-muted">@SearchNearbyPlaces.ReadableDistance(SearchNearbyPlaces.DistanceBetweenPlaces(ViewBag.Latitude.ToString(), ViewBag.Longitude.ToString(), item)) od Ciebie</h6>
            </div>
            @if (item.Photo is not null)
            {
                <img class="d-block user-select-none" width="100%" height="200" aria-label="Placeholder: Image cap" focusable="false" role="img" preserveAspectRatio="xMidYMid slice" viewBox="0 0 318 180" style="font-size: 1.125rem; text-anchor: middle; object-fit: cover"
                     src="data:image;base64,@Html.Raw(item.Photo)" alt="Card image cap">
            }
            else
            {
                <img class="d-block user-select-none" width="100%" height="200" aria-label="Placeholder: Image cap" focusable="false" role="img" preserveAspectRatio="xMidYMid slice" viewBox="0 0 318 180" style="font-size: 1.125rem; text-anchor: middle"
                     src="/img/image-placeholder.jpg" alt="Card image cap">
            }
            <div class="card-body">
                <p class="card-text"></p>
            </div>
            <ul class="list-group list-group-flush">
                <form method="post" style="display: flex; justify-content: center;">
                    <div class="btn-group" role="group" aria-label="Basic example" style="margin: 4px;">

                        <button type="button" class="btn btn-success"><l class="bi bi-plus-circle"> Zadanie</l></button>
                        <button type="button" class="btn btn-secondary" data-bs-toggle="modal" data-bs-target="#mapModal" onclick="initMap(@item.Latitude.ToString(CultureInfo.InvariantCulture), @item.Longitude.ToString(CultureInfo.InvariantCulture))"><l class="bi-map"> Mapa</l></button>
                        <button type="button" class="btn btn-secondary" style="background-color: #e16c82; color: white; border-color: #e16c82" onclick="post('@item.Id')"><l class="bi-heart"> Ulubione</l></button>
                    </div>
                    <div class="btn">
                        <button class="btn btn-success dropdown-toggle" type="button" id="dropdownMenuButton1" data-bs-toggle="dropdown" aria-expanded="false">
                            <l class="bi-three-dots"></l>
                        </button>
                        <ul class="dropdown-menu" aria-labelledby="dropdownMenuButton1">
                            <li><a class="dropdown-item" href="Places/Edit/@item.Id"><l class="bi-pencil"> Edytuj</l></a></li>
                            <li><a id="deleteItem" class="dropdown-item deleteItem" data-bs-toggle="modal" data-bs-target="#deleteModal" data-path="@Url.Action("Delete", "Places", new { id = @item.Id })"><l class="bi-trash-fill"> Usuń miejsce</l></a></li>

                        </ul>
                    </div>
                </form>
            </ul>


            <div class="card-footer text-muted" style="white-space: nowrap; overflow: hidden; text-overflow: ellipsis;">

                @if (item.Types != null)
                {
                    foreach (var type in item.Types)
                    {
                        if (SearchPlaceByCategory.PlaceCategoriesTranslated.ContainsKey(type))
                        {
                            foreach (KeyValuePair<string, string> kvp in SearchPlaceByCategory.PlaceCategoriesTranslated)
                            {
                                if (kvp.Key.Equals(type))
                                {
                                    <label>@kvp.Value |</label>
                                }
                            }
                        }
                        else
                        {
                            <label style="color: silver"> @type |</label>
                        }
                    }
                    @if (item.Types.Length == 0)
                    {
                        <label>Brak kategorii</label>
                    }
                }
            </div>
        </div>
    }
</div>
