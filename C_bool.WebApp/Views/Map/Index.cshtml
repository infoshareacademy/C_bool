@using C_bool.WebApp.Interfaces
@inject IAppSettings appSettings;
@using System.Text.Json
@using System.Globalization
@model IEnumerable<C_bool.BLL.Models.Places.Place>

@{
    ViewData["Title"] = "Index";
}

<div>
    <button id="locationButton" type="button" class="btn btn-primary" onclick="getLocation()">Pobierz lokalizację</button>
    <a asp-action="Update"><input type="button" class="btn btn-primary" value="Odśwież bazując na lokalizacji" /></a>
    <a asp-action="NewRequest"><input type="button" class="btn btn-primary" value="Nowe zapytanie" /></a>
</div>

<ul class="nav nav-tabs">
    <li class="nav-item">
        <a class="nav-link active" data-bs-toggle="tab" href="#home">Miejsca</a>
    </li>
    <li class="nav-item">
        <a class="nav-link" data-bs-toggle="tab" href="#maptab">Mapa</a>
    </li>
    <li class="nav-item">
        <a class="nav-link disabled" href="#">Disabled</a>
    </li>
    <li class="nav-item dropdown">
        <a class="nav-link dropdown-toggle" data-bs-toggle="dropdown" href="#" role="button" aria-haspopup="true" aria-expanded="false">Dropdown</a>
        <div class="dropdown-menu" style="">
            <a class="dropdown-item" href="#">Action</a>
            <a class="dropdown-item" href="#">Another action</a>
            <a class="dropdown-item" href="#">Something else here</a>
            <div class="dropdown-divider"></div>
            <a class="dropdown-item" href="#">Separated link</a>
        </div>
    </li>
</ul>

<!-- Button trigger modal -->
<button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#exampleModal">
    Launch demo modal
</button>

<!-- Modal -->
<div class="modal fade" id="exampleModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">Modal title</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                ...
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                <button type="button" class="btn btn-primary">Save changes</button>
            </div>
        </div>
    </div>
</div>

<div class="modal" id="mapModal">
    <div class="modal-dialog modal-dialog-centered modal-lg" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Modal title</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true"></span>
                </button>
            </div>
            <div class="modal-body">
                <div id="map" style="background-color: gainsboro; width: 100%; height: 800px"></div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-primary">Save changes</button>
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

<div id="myTabContent" class="tab-content">
    <div class="tab-pane fade active show" id="home">
        @if (Model.Count() > 0)
        {
            <h1>Miejsca:</h1>
        }
        else
        {
            <div class="alert alert-dismissible alert-warning">
                <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
                <h4 class="alert-heading">Nie bangla!</h4>
                <p class="mb-0">Wygląda na to, że nie ma żadnych miejsc pasujacych do zapytania :-(<br>Kliknij przycisk <b>Nowe zapytanie</b> aby coś wyszukać</p>
            </div>
        }

        <div>
            @foreach (var item in Model)
            {
                <div class="card mb-3" style="float: left; width: 400px; height: 600px">
                    <h3 class="card-header" style="white-space: nowrap; overflow: hidden; text-overflow: ellipsis;">@Html.DisplayFor(modelItem => item.Name)</h3>
                    <div class="card-body">
                        <h5 class="card-title">@Html.DisplayFor(modelItem => item.Address)</h5>
                        <h6 class="card-subtitle text-muted">Ocena: @Html.DisplayFor(modelItem => item.Rating) / (@Html.DisplayFor(modelItem => item.UserRatingsTotal)) wszystkich ocen</h6>
                    </div>
                    <svg xmlns="http://www.w3.org/2000/svg" class="d-block user-select-none" width="100%" height="200" aria-label="Placeholder: Image cap" focusable="false" role="img" preserveAspectRatio="xMidYMid slice" viewBox="0 0 318 180" style="font-size: 1.125rem; text-anchor: middle">
                        <rect width="100%" height="100%" fill="#868e96"></rect>
                        <text x="50%" y="50%" fill="#dee2e6" dy=".3em">Image cap</text>
                    </svg>
                    <div class="card-body">
                        <p class="card-text">Some quick example text to build on the card title and make up the bulk of the card's content.</p>
                    </div>
                    <ul class="list-group list-group-flush">
                        <div class="btn-group" role="group" aria-label="Basic example">
                            <button type="button" class="btn btn-primary">Left</button>
                            <button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#exampleModal">Pokaż na mapie</button>
                            <button type="button" class="btn btn-secondary" data-bs-toggle="modal" data-bs-target="#mapModal" onclick="initMap(@item.Geometry.Location.Latitude.ToString(CultureInfo.InvariantCulture), @item.Geometry.Location.Longitude.ToString(CultureInfo.InvariantCulture))">Right</button>
                        </div>
                    </ul>
                    <p id="@item.Id">@item.Geometry.Location.Latitude.ToString(CultureInfo.InvariantCulture), @item.Geometry.Location.Longitude.ToString(CultureInfo.InvariantCulture)</p>
                    <div class="card-footer text-muted">
                        @Html.DisplayFor(modelItem => item.Types) |
                    </div>
                </div>
            }
        </div>

    </div>
    <div class="tab-pane fade" id="maptab">
        <div id="dvMap" style="width: 100%; height: 800px"></div>
    </div>
    <div class="tab-pane fade" id="dropdown1">
        <p>Etsy mixtape wayfarers, ethical wes anderson tofu before they sold out mcsweeney's organic lomo retro fanny pack lo-fi farm-to-table readymade. Messenger bag gentrify pitchfork tattooed craft beer, iphone skateboard locavore carles etsy salvia banksy hoodie helvetica. DIY synth PBR banksy irony. Leggings gentrify squid 8-bit cred pitchfork.</p>
    </div>
    <div class="tab-pane fade" id="dropdown2">
        <p>Trust fund seitan letterpress, keytar raw denim keffiyeh etsy art party before they sold out master cleanse gluten-free squid scenester freegan cosby sweater. Fanny pack portland seitan DIY, art party locavore wolf cliche high life echo park Austin. Cred vinyl keffiyeh DIY salvia PBR, banh mi before they sold out farm-to-table VHS viral locavore cosby sweater.</p>
    </div>
</div>

<script>
    var latitude, longitude;
    getLocation();

    function getLocation() {
        if (navigator.geolocation) {
            navigator.geolocation.getCurrentPosition(useLocation);
        }

    };

    function useLocation(position) {
        /*            window.location.replace('?lat=' + position.coords.longitude + '&?lon=' + position.coords.latitude);*/
        latitude = position.coords.latitude;
        longitude = position.coords.longitude;

        var postData = { Latitude: latitude, Longitude: longitude };
        $.ajax(
            {
                type: "POST",
                url: "@Url.Action("GetGeoLocation", "Map")",
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                //dataType: "json",
                data: JSON.stringify(postData),
                success: function (data) {
                    //alert("Pass" + data);
                },
                error: function (ex) {
                    alert("Nie udało się przekazać lokalizacji" + ex);
                }
            });
    };

    window.onload = getLocation();
</script>

<script type="text/javascript" src="https://maps.googleapis.com/maps/api/js?key=@appSettings.GoogleAPIKey"></script>
<script type="text/javascript">
    var markers = JSON.parse('@Html.Raw(JsonSerializer.Serialize(Model))');
    window.onload = function () {
        var mapOptions = {
            center: new google.maps.LatLng(markers[0].Geometry.Location.Latitude, markers[0].Geometry.Location.Longitude),
            zoom: 14,
            mapTypeId: google.maps.MapTypeId.ROADMAP,
            mapId: 'c67cdd640e77cc91'
        };
        var infoWindow = new google.maps.InfoWindow();
        var map = new google.maps.Map(document.getElementById("dvMap"), mapOptions);
        for (i = 0; i < markers.length; i++) {
            var data = markers[i]
            var myLatlng = new google.maps.LatLng(data.Geometry.Location.Latitude, data.Geometry.Location.Longitude);
            var marker = new google.maps.Marker({
                position: myLatlng,
                map: map,
                title: data.Name,
                icon: "/img/onion.png"
            });
            (function (marker, data) {
                google.maps.event.addListener(marker, "click", function (e) {
                    infoWindow.setContent(data.Address);
                    infoWindow.open(map, marker);
                });
            })(marker, data);
        }
    }
</script>
<script>
    function initMap(latitude, longitude) {
        // The location of Uluru
        const uluru = { lat: latitude, lng: longitude };
        // The map, centered at Uluru
        const map = new google.maps.Map(document.getElementById("map"), {
            zoom: 16,
            center: uluru,
        });
        // The marker, positioned at Uluru
        const marker = new google.maps.Marker({
            position: uluru,
            map: map,
            icon: "/img/onion.png"
        });
    }
</script>