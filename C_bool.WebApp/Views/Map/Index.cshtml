@using C_bool.WebApp.Interfaces
@inject IAppSettings appSettings;
@using System.Text.Json
@model IEnumerable<C_bool.BLL.Models.Places.Place>

@{
    ViewData["Title"] = "Index";
}

<h1>Index</h1>

<div>
    <button id="locationButton" type="button" class="btn btn-primary" onclick="getLocation()">Pobierz lokalizację</button>
    <a asp-action="Update"><input type="button" class="btn btn-primary" value="Odśwież bazując na lokalizacji"/></a>
    <a asp-action="NewRequest"><input type="button" class="btn btn-primary" value="Nowe zapytanie"/></a>
</div>


<div style="">
    <table class="table">
        <thead>
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.Name)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Rating)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.UserRatingsTotal)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Address)
                </th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.Name)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Rating)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.UserRatingsTotal)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Address)

                    </td>
                    <td>
                        @Html.ActionLink("Edit", "Edit", new { /* id=item.PrimaryKey */ }) |
                        @Html.ActionLink("Details", "Details", new { /* id=item.PrimaryKey */ }) |
                        @Html.ActionLink("Delete", "Delete", new { /* id=item.PrimaryKey */ }) |
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>

<div id="dvMap" style="background-color: darkgray; width: 100%; height: 500px"></div>

@*<div id="dvMap" style="width: 100%; height: 500px">
    </div>*@

<script>
    var latitude, longitude;
    getLocation();

    function getLocation() {
        if (navigator.geolocation) {
            navigator.geolocation.getCurrentPosition(useLocation);
        }

    };

    function useLocation(position) {
        /*            window.location.replace('?lat=' + position.coords.longitude + '&?lon=' + position.coords.latitude);*/
        latitude = position.coords.latitude;
        longitude = position.coords.longitude;

        var postData = { Latitude: latitude, Longitude: longitude };
        $.ajax(
            {
                type: "POST",
                url: "@Url.Action("GetGeoLocation", "Map")",
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                //dataType: "json",
                data: JSON.stringify(postData),
                success: function (data) {
                    //alert("Pass" + data);
                },
                error: function (ex) {
                    alert("Nie udało się przekazać lokalizacji" + ex);
                }
            });
    };

    window.onload = getLocation();
</script>

<script type="text/javascript" src="https://maps.googleapis.com/maps/api/js?key=@appSettings.GoogleAPIKey"></script>
<script type="text/javascript">
    var markers = JSON.parse('@Html.Raw(JsonSerializer.Serialize(Model))');
    window.onload = function () {
        var mapOptions = {
            center: new google.maps.LatLng(markers[0].Geometry.Location.Latitude, markers[0].Geometry.Location.Longitude),
            zoom: 14,
            mapTypeId: google.maps.MapTypeId.ROADMAP,
            mapId: 'c67cdd640e77cc91'
        };
        var infoWindow = new google.maps.InfoWindow();
        var map = new google.maps.Map(document.getElementById("dvMap"), mapOptions);
        for (i = 0; i < markers.length; i++) {
            var data = markers[i]
            var myLatlng = new google.maps.LatLng(data.Geometry.Location.Latitude, data.Geometry.Location.Longitude);
            var marker = new google.maps.Marker({
                position: myLatlng,
                map: map,
                title: data.Name,
                icon: "/img/onion.png"
            });
            (function (marker, data) {
                google.maps.event.addListener(marker, "click", function (e) {
                    infoWindow.setContent(data.Address);
                    infoWindow.open(map, marker);
                });
            })(marker, data);
        }
    }
</script>
