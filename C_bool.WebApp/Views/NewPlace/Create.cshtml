@using C_bool.WebApp.Config
@using Microsoft.Extensions.Options
@model C_bool.BLL.Models.Places.Place
@inject IOptions<AppSettings> appSettings;

<h1>Dodaj nowe miejsce</h1>

<h4>Wybierz lokalizację na mapie i krótko ją opisz</h4>
<hr />

<div class="row">
    <div class="col-md-4">
        <form asp-action="Create">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Name" class="control-label"></label>
                <input asp-for="Name" class="form-control" />
                <span asp-validation-for="Name" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Address" class="control-label"></label>
                <input id="address" asp-for="Address" value="Brak adresu" class="form-control" />
                <span asp-validation-for="Address" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Description" class="control-label"></label>
                <input asp-for="Description" value="Brak opisu" class="form-control" />
                <span asp-validation-for="Description" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input id="latitudeForm" style="display: none;" asp-for="Geometry.Location.Latitude" class="form-control" />
            </div>
            <div class="form-group">
                <input id="longitudeForm" style="display: none;" asp-for="Geometry.Location.Longitude" class="form-control" />
            </div>
            <br />
            <div class="form-group">
                <input type="submit" value="Utwórz nowe miejsce" class="btn btn-primary btn-lg" />
            </div>
        </form>
    </div>
    <div class="col">
        <div id="map" style="background-color: gainsboro; width: 100%; height: 80vh"></div>
    </div>
</div>

<script type="text/javascript" src="https://maps.googleapis.com/maps/api/js?key=@appSettings.Value.GoogleAPIKey"></script>
<script>
    var latitude, longitude;
    getLocation();

    function getLocation() {
        if (navigator.geolocation) {
            navigator.geolocation.getCurrentPosition(useLocation);
        } else {
            alert("Nie udało się pobrać lokalizacji, upewnij się, że zezwoliłeś na dostęp do lokalziacji");
        }

    };

    function useLocation(position) {
        latitude = position.coords.latitude;
        longitude = position.coords.longitude;

        document.getElementById('latitudeForm').value = latitude;
        document.getElementById('longitudeForm').value = longitude;
        initMap();

    };
    window.onload = getLocation();
</script>

<script>
    var geocoder;
    var myLatlng;

    function initMap() {
        var latitude, longitude;
        latitude = parseFloat(document.getElementById('latitudeForm').value);
        longitude = parseFloat(document.getElementById('longitudeForm').value);

        geocoder = new google.maps.Geocoder();

        myLatlng = { lat: latitude, lng: longitude };

        const map = new google.maps.Map(document.getElementById("map"), {
            zoom: 10,
            center: myLatlng,
        });
        // Create the initial InfoWindow.
        let infoWindow = new google.maps.InfoWindow({
            content: "Kliknij na mapę aby wybrać położenie",
            position: myLatlng,
        });

        infoWindow.open(map);
        // Configure the click listener.
        map.addListener("click", (mapsMouseEvent) => {
            // Close the current InfoWindow.
            infoWindow.close();
            // Create a new InfoWindow.
            infoWindow = new google.maps.InfoWindow({
                position: mapsMouseEvent.latLng,
            });
            infoWindow.setContent("Szukaj tutaj");
            infoWindow.open(map);

            document.getElementById('latitudeForm').value = mapsMouseEvent.latLng.lat();
            document.getElementById('longitudeForm').value = mapsMouseEvent.latLng.lng();

            myLatlng = { lat: mapsMouseEvent.latLng.lat(), lng: mapsMouseEvent.latLng.lng() };
            @if (appSettings.Value.EnableGeocoding)
            {
                <text>
                geocodeLatLng(geocoder, map, infoWindow);
                </text>

            }
        });

    }

    function geocodeLatLng(geocoder, map, infowindow) {

        geocoder
            .geocode({ location: myLatlng })
            .then((response) => {
                if (response.results[0]) {
                    map.setZoom(11);

                    const marker = new google.maps.Marker({
                        position: myLatlng,
                        map: map,
                    });

                    infowindow.setContent(response.results[0].formatted_address);
                    infowindow.open(map, marker);
                    document.getElementById('address').value = response.results[0].formatted_address;
                } else {
                    window.alert("No results found");
                }
            })
            .catch((e) => window.alert("Geocoder failed due to: " + e));
    }


    window.addEventListener("load", initMap);
</script>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
